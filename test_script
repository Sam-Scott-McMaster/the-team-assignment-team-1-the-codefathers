#!/bin/bash
#
# A simple framework for regression testing the convert (budget_test) script
#
# Returns the number of failed test cases.
#
# Format of a test:
#     test 'command' 'input file name' 'expected output file name' 'expected std error file name'
#
# Some example test cases are given. You should add more test cases.
#
# CAUTION: Uses temporary files named test_err.txt and test_out.txt
# 
# Sam Scott, McMaster University, 2024
#
declare -i tc=0
declare -i fails=0

# Set dynamic coverage path
export GCOV_PREFIX=$(pwd)
export GCOV_PREFIX_STRIP=$(pwd | tr -cd '/' | wc -c)

############################################
# Run a single test. Runs a given command 
# to check the return value, stdout, and stderr
#
# GLOBALS: tc, fails
# PARAMS: $1 = command
#         $2 = input file name
#         $3 = expected std output file name
#         $4 = expected std error file name
#
# Assumes return value should be 0 if the
# std error file is empty. Otherwise it 
# should be 1.
#
# OUTPUTS: An pass/fail report showing the
# difference between expected and actual
# output on a failure (diff command)
############################################
test() {
    tc=tc+1

    local COMMAND=$1
    local INP=$2
    local EX_OUT=$3
    local EX_ERR=$4 

    EX_RET=1
    if [[ $(cat $EX_ERR) = "" ]]; then
        EX_RET=0
    fi
    $COMMAND < $INP > test_out.txt 2> test_err.txt
    RET=$?
    if [[ $RET != $EX_RET ]]; then
        echo "TC $tc Failed"
        echo "Returned $RET"
        echo "-----------"
        fails=$fails+1
        return
    fi
    DIFF=$(diff test_out.txt $EX_OUT)
    if [[ $DIFF != '' ]]; then
        echo "TC $tc Failed Standard Output"
        echo "$DIFF"
        echo "-----------"
        fails=$fails+1
        return
    fi
    DIFF=$(diff test_err.txt $EX_ERR)
    if [[ $DIFF != '' ]]; then
        echo "TC $tc Failed Standard Error"
        echo "$DIFF"
        echo "-----------"
        fails=$fails+1
        return
    fi

    echo "TC $tc Passed"
}

##command and flag, stdin, stdout, stderr

#input and output files are stored under directories, the test cases will be modified accordingly

test './budget_test --help' 'input_files/empty.txt' 'output_files/help.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp1.txt' 'output_files/out1.txt' 'output_files/empty.txt' #create user
test './budget_test' 'input_files/inp2.txt' 'output_files/out2.txt' 'output_files/empty.txt' #test option 1
test './budget_test' 'input_files/inp3.txt' 'output_files/out3.txt' 'output_files/empty.txt' #test option 2
test './budget_test' 'input_files/inp4.txt' 'output_files/out4.txt' 'output_files/empty.txt' #test option 3 
test './budget_test' 'input_files/inp5.txt' 'output_files/out5.txt' 'output_files/empty.txt' #test option 4
test './budget_test' 'input_files/inp6.txt' 'output_files/out6.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp7.txt' 'output_files/out7.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp8.txt' 'output_files/out8.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp9.txt' 'output_files/out9.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp10.txt' 'output_files/out10.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp11.txt' 'output_files/out11.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp12.txt' 'output_files/out12.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp13.txt' 'output_files/out13.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp14.txt' 'output_files/out14.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp15.txt' 'output_files/out15.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp16.txt' 'output_files/out16.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp17.txt' 'output_files/out17.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp18.txt' 'output_files/out18.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp19.txt' 'output_files/out19.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp20.txt' 'output_files/out20.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp21.txt' 'output_files/out21.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp22.txt' 'output_files/out22.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp23.txt' 'output_files/out23.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp24.txt' 'output_files/out24.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp25.txt' 'output_files/out25.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp26.txt' 'output_files/out26.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp27.txt' 'output_files/out27.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp28.txt' 'output_files/out28.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp29.txt' 'output_files/out29.txt' 'output_files/error.txt'
test './budget_test' 'input_files/inp30.txt' 'output_files/out30.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp31.txt' 'output_files/out31.txt' 'output_files/empty.txt'
test './budget_test' 'input_files/inp32.txt' 'output_files/out32.txt' 'output_files/empty.txt'

# clean up
rm test_err.txt test_out.txt 
rm transaction_logs/sarah123.txt history_logs/sarah123.txt
rm transaction_logs/sarah1234.txt history_logs/sarah1234.txt
rm transaction_logs/johndoe.txt history_logs/johndoe.txt
rm transaction_logs/janedoe.txt history_logs/janedoe.txt
rm transaction_logs/ggabby.txt history_logs/ggabby.txt
rm transaction_logs/gisjohnson.txt history_logs/gisjohnson.txt
rm transaction_logs/gemagem.txt history_logs/gemagem.txt
rm transaction_logs/gabstone.txt history_logs/gabstone.txt
rm transaction_logs/sainz55.txt history_logs/sainz55.txt
rm transaction_logs/leclerc16.txt history_logs/leclerc16.txt

# return code
exit $fails